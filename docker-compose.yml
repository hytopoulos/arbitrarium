networks:
  app_network:
    driver: bridge

services:
  postgres:
    image: postgres:13
    environment:
      POSTGRES_USER: arb
      POSTGRES_PASSWORD: arb
    ports:
      - "127.0.0.1:5432:5432"
    volumes:
      - ./postgres:/var/lib/postgresql/data
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "arb", "-d", "arb_test"]
      interval: 5s
      timeout: 5s
      retries: 5

  backend:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    cap_drop:
      - all
    cap_add:
      - setuid
      - setgid
      - setfcap
    env_file:
      - backend/docker.dev.env
    environment:
      - DJANGO_SETTINGS_MODULE=mysite.settings
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
      - DATABASE_URL=postgresql://arb:arb@postgres:5432/arb_test
    ports:
      - "8000:8000"
    security_opt:
      - apparmor=unconfined
      - seccomp=unconfined
    volumes:
      - ./backend:/backend
    tmpfs:
      - /dev/shm:exec,uid=1000,gid=1000,size=64M,mode=0700
      - /sandbox/tmp:exec,uid=1000,gid=1000,size=64M,mode=0700
    networks:
      - app_network
    depends_on:
      postgres:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  frontend:
    build: 
      context: ./frontend
      dockerfile: Dockerfile
    environment:
      - NODE_ENV=development
      - REACT_APP_API_BASE=/api
      - REACT_APP_INTERNAL_API_BASE=http://backend:8000/api
    ports:
      - "8080:8080"
    volumes:
      - ./frontend:/frontend
      - /frontend/node_modules
    working_dir: /frontend
    command: sh -c "npm install && npm start"
    networks:
      - app_network
    depends_on:
      - backend

  nginx:
    image: nginx:1.22-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx:/etc/nginx/conf.d
      - ./backend/media:/media
    networks:
      - app_network
    depends_on:
      - backend
      - frontend