# Generated by Django 5.0.6 on 2025-08-02 05:34

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Environment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='environments', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Entity',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(default='Entity', max_length=255)),
                ('wnid', models.IntegerField(blank=True, null=True)),
                ('fnid', models.IntegerField(blank=True, null=True)),
                ('active_frames', models.JSONField(default=dict, help_text='Frames this entity is currently participating in')),
                ('properties', models.JSONField(default=dict, help_text='Custom properties and their values')),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_at', models.DateTimeField(auto_now=True, null=True)),
                ('inventory', models.ManyToManyField(blank=True, help_text='Items this entity possesses', related_name='possessed_by', to='coreapp.entity')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entities', to=settings.AUTH_USER_MODEL)),
                ('env', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='entities', to='coreapp.environment')),
            ],
            options={
                'verbose_name_plural': 'Entities',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Frame',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fnid', models.IntegerField(null=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('definition', models.TextField(blank=True, null=True)),
                ('is_primary', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('entity', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='frames', to='coreapp.entity')),
            ],
            options={
                'ordering': ['-is_primary', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Element',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fnid', models.IntegerField(null=True)),
                ('name', models.CharField(blank=True, max_length=255)),
                ('core_type', models.CharField(choices=[('core', 'Core'), ('core_ue', 'Core-Unexpressed'), ('peripheral', 'Peripheral'), ('extra_thematic', 'Extra-Thematic')], default='core', max_length=20)),
                ('definition', models.TextField(blank=True, null=True)),
                ('value', models.JSONField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('frame', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='elements', to='coreapp.frame')),
            ],
            options={
                'ordering': ['core_type', 'name'],
            },
        ),
        migrations.AddIndex(
            model_name='environment',
            index=models.Index(fields=['name'], name='coreapp_env_name_96bf07_idx'),
        ),
        migrations.AddIndex(
            model_name='environment',
            index=models.Index(fields=['created_at'], name='coreapp_env_created_16deed_idx'),
        ),
        migrations.AddIndex(
            model_name='environment',
            index=models.Index(fields=['user', 'name'], name='user_env_name_idx'),
        ),
        migrations.AddIndex(
            model_name='entity',
            index=models.Index(fields=['name'], name='coreapp_ent_name_67e0cc_idx'),
        ),
        migrations.AddIndex(
            model_name='entity',
            index=models.Index(fields=['fnid'], name='coreapp_ent_fnid_92d54e_idx'),
        ),
        migrations.AddIndex(
            model_name='entity',
            index=models.Index(fields=['wnid'], name='coreapp_ent_wnid_6d8121_idx'),
        ),
        migrations.AddIndex(
            model_name='frame',
            index=models.Index(fields=['entity', 'is_primary'], name='coreapp_fra_entity__8479e6_idx'),
        ),
        migrations.AddIndex(
            model_name='frame',
            index=models.Index(fields=['fnid'], name='coreapp_fra_fnid_20b49e_idx'),
        ),
        migrations.AddIndex(
            model_name='element',
            index=models.Index(fields=['frame', 'core_type'], name='coreapp_ele_frame_i_409a66_idx'),
        ),
        migrations.AddIndex(
            model_name='element',
            index=models.Index(fields=['fnid'], name='coreapp_ele_fnid_c41542_idx'),
        ),
    ]
